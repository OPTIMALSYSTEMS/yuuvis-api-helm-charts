{{- if not .Values.elasticsearch.highAvailability.enabled}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  labels:
    app: {{.Values.yuuvis.labels.app}}
    name: elasticsearch
spec:
  serviceName: elasticsearch
  replicas: {{.Values.elasticsearch.replicas}}
  selector:
    matchLabels:
      name: elasticsearch
      app: {{.Values.yuuvis.labels.app}}
  template:
    metadata:
      labels:
        name: elasticsearch
        app: {{.Values.yuuvis.labels.app}}
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
      - name: sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        image: "{{.Values.elasticsearch.image}}"
        imagePullPolicy: {{.Values.elasticsearch.imagePullPolicy}}
        args:
        - elasticsearch
        - -E
        - node.master=true
        - -E
        - node.data=true
        - -E
        - node.ingest=false
        - -E
        - discovery.seed_hosts=elasticsearch
        - -E
        - cluster.initial_master_nodes={{.Values.elasticsearch.initial_master_nodes}}
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        - containerPort: 9200
          name: http
          protocol: TCP
        env:
        - name: "ES_JAVA_OPTS"
          value: {{.Values.elasticsearch.memory}}
        volumeMounts:
        - name: es-data
          mountPath: /usr/share/elasticsearch/data
      imagePullSecrets:
      - name: {{.Values.elasticsearch.imagePullSecret}}
  volumeClaimTemplates:
  - metadata:
      name: es-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{.Values.elasticsearch.storage}}
      storageClassName: {{.Values.elasticsearch.storageClassName}}
{{- end}}    
