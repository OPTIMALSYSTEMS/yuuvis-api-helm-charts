imageCredentials:
  dockeryuuvisorg:
    registry: docker.yuuvis.org
    username:
    password:

yuuvis:
  # !!! Change before running
  # replace the value with the namespace you intent to use for the yuuvis API services
  # this chart creates a k8s job that generatey a selfsigned certificate and deploys the
  # crt file as a secret to the given namespace
  namespaces: 
    yuuvis: yuuvis
    infrastructure: infrastructure
  authentication:
    # we assume test deployment in minikube
    # ip is the ip of the vm minikube creates
    # to get the ip: minikube ip
    ip: 192.168.99.100
    port: 30080
  labels:
    app: yuuvis
  db:
    user: yuuvis
    password: changeme
  keycloak:
    user: keycloak
    password: changeme
    db:
      user: keycloak
      password: changeme
    nodePort: 30111
    
elasticsearch:
  image: docker.yuuvis.org/yuuvis/elasticsearch:2022-01-11
  imagePullPolicy: IfNotPresent
  imagePullSecret: dockeryuuvisorg
  storage: 5Gi
  storageClassName: standard
  javaOpts: -Xms1024m -Xmx1024m
  replicas: 1
  port: 9300
  targetPort: 9300
  port2: 9200
  targetPort2: 9200
  # value for the elastic parameter uster.initial_master_nodes
  # if more than 1 node should be used, adjust initial master nodes value
  initial_master_nodes: elasticsearch-0

postgresql:
  enabled: true
  fullnameOverride: postgresql
  postgresqlPassword: changeme
  persistence:
    storageClass: standard
    size: 500Mi
  resources:
    requests:
      memory: 128Mi
      cpu: 50m
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  initdbScriptsConfigMap: postgresql-initdb
  postgresqlExtendedConf: {"max_connections": "400", "shared_buffers": "128MB"}


rabbitmq:
  enabled: true
  fullnameOverride: rabbitmq
  auth:
    username: rodger
    password: changeme
  extraPlugins: "rabbitmq_auth_backend_ldap rabbitmq_amqp1_0 rabbitmq_prometheus"
  extraConfiguration: |-
    #default_vhost = {{ .Release.Namespace }}-vhost
    #disk_free_limit.absolute = 50MB
    #load_definitions = /app/load_definition.json
    amqp1_0.default_user = rodger
  persistence:
    enabled: true
    storageClass: standard
    size: 1Gi

gogs:
  useCustomDeployment: true
  image: gogs/gogs:0.11.91
  imagePullPolicy: IfNotPresent
  initcontainer:
    image: docker.yuuvis.org/yuuvis/helper/init-helper:latest
    secret: dockeryuuvisorg
  persistence:
    size: 100Mi
    storageClass: standard
  git:
    user: yuuvis
    password: changeme
    
minio:
  enabled: true
  fullnameOverride: minio
  accessKey: "MGMWCOYTDUSLNCFE"
  secretKey: "changeme"
  persistence:
    storageClass: standard
    size: 10Gi
  resources: {}
  # for gateway usage with azure blob storage set access  key and secret key to your
  # storage account credentials, activate azure gateway mode and disable persistence
  # persistence:
  #   enabled: false
  # azuregateway:
  #   enabled: true
  #   replicas: 1 

keycloak:
  enabled: true
  fullnameOverride: "keycloak"
  image.repository: docker.yuuvis.org/yuuvis/keycloak
  image.tag: 11.0.2-stable1
  livenessProbe: |
    httpGet:
      path: /auth/
      port: http
    initialDelaySeconds: 600
    timeoutSeconds: 5
  postgresql:
    enabled: false
  extraEnv: |
    - name: KEYCLOAK_USER_FILE
      value: /secrets/keycloak/user
    - name: KEYCLOAK_PASSWORD_FILE
      value: /secrets/keycloak/password
    - name: PROXY_ADDRESS_FORWARDING
      value: "true"
    - name: DB_VENDOR
      value: postgres
    - name: DB_ADDR
      value: postgresql
    - name: DB_PORT
      value: "5432"
    - name: DB_DATABASE
      value: keycloak
    - name: DB_USER_FILE
      value: /secrets/db-creds/user
    - name: DB_PASSWORD_FILE
      value: /secrets/db-creds/password
  extraVolumes: |
    - name: keycloak-tls-localhost
      secret:
        defaultMode: 420
        secretName: keycloak-selfsigned-tls-secret
    - name: db-creds
      secret:
        secretName: keycloakdb
    - name: kc-creds
      secret:
        secretName: keycloakuser
  extraVolumeMounts: |
    - name: keycloak-tls-localhost
      mountPath: "/etc/x509/https/"
    - name: db-creds
      mountPath: /secrets/db-creds
      readOnly: true
    - name: kc-creds
      mountPath: /secrets/keycloak
      readOnly: true

redis:
  fullnameOverride: redis
  ## Cluster settings
  cluster:
    enabled: false
  usePassword: false
  master:
    livenessProbe:
      initialDelaySeconds: 600
    persistence:
      enabled: false
      storageClass: standard
      size: 50Mi
