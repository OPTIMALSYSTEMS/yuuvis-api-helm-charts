{{- if .Values.yuuvis.management.console.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: console
  name: console
spec:
  replicas: {{.Values.yuuvis.management.console.api.instances}}
  selector:
    matchLabels:
      app: console
  template:
    metadata:
      labels:
        app: console
    spec:
      containers:
      - name: console
        image: "{{.Values.yuuvis.management.console.api.dockerImage}}"
        imagePullPolicy: {{ .Values.yuuvis.image.imagePullPolicy }}
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: app-configmap-volume
          mountPath: /home/node/app/.env
          subPath: .env
      initContainers:
      {{- if .Values.yuuvis.management.console.api.config.db.createdb }}
      - command:
        - sh
        - /yuuvis/script/initdb.sh
        env:
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              key: user
              name: initconsole-dbsecret
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: initconsole-dbsecret
        - name: DBUSER
          valueFrom:
            secretKeyRef:
              key: user
              name: console-dbsecret
        - name: DBPWD
          valueFrom:
            secretKeyRef:
              key: password
              name: console-dbsecret
        - name: DBNAME
          value: {{.Values.yuuvis.management.console.api.config.db.name}}
        image: docker.yuuvis.org/yuuvis/helper/init-helper:latest
        imagePullPolicy: Always
        name: init-database
        volumeMounts:
        - mountPath: /yuuvis/script/initdb.sh
          name: initscript
          subPath: initdb.sh
      {{- end}}
      volumes:
      - name: app-configmap-volume
        configMap:
          name: console-app-config
          items:
          - key: .env
            path: .env
      {{- if .Values.yuuvis.management.console.api.config.db.createdb }}
      - configMap:
          name: initconsoledbconfigmap
        name: initscript
      {{- end}}
      restartPolicy: Always
      automountServiceAccountToken: false
      imagePullSecrets:
      - name: {{.Values.yuuvis.image.imagePullSecret}}
{{- end}}