apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{.Values.yuuvis.labels.app}}
    name: commander
  name: commander
spec:
  replicas: {{.Values.yuuvis.services.commander.instances}}
  selector:
    matchLabels:
      name: commander
  template:
    metadata:
      labels:
        name: commander
    spec:
      {{- if or .Values.yuuvis.services.commander.nodeAffinity .Values.yuuvis.services.commander.podAffinity .Values.yuuvis.services.commander.podAntiAffinity }}
      affinity:
        {{- with .Values.yuuvis.services.commander.nodeAffinity }}
        nodeAffinity: {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.yuuvis.services.commander.podAffinity }}
        podAffinity: {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.yuuvis.services.commander.podAntiAffinity }}
        podAntiAffinity: {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}
      initContainers:
      - name: init-commander
        image: "{{.Values.initContainer.dockerRegistry}}/{{.Values.initContainer.image}}:{{.Values.initContainer.tag}}"
        imagePullPolicy: {{.Values.initContainer.imagePullPolicy}}
        command: ["sh", "-c", "{{.Values.initContainer.command}}"]
      containers:
      - name: commander
        image: "{{.Values.yuuvis.image.dockerRegistry}}/{{.Values.yuuvis.services.commander.dockerImage}}:{{ .Values.yuuvis.services.commander.tag }}"
        imagePullPolicy: {{ .Values.yuuvis.image.imagePullPolicy }}
        resources:
          requests:
            memory: {{.Values.yuuvis.services.commander.requests.memory}}        
        env:
        - name: JAVA_OPTS
          value: {{.Values.yuuvis.services.commander.java.maxHeap}}
        - name: SPRING_PROFILES_ACTIVE
          value: {{.Values.yuuvis.services.commander.profiles}}
        - name: SPRING_CLOUD_CONFIG_URI
          valueFrom:
            configMapKeyRef:
              name: yuuvis-common-env
              key: CONFIGSERVICEURL
        ports:
        - containerPort: 8022
      restartPolicy: Always
      {{- with .Values.yuuvis.services.commander.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.yuuvis.services.commander.priorityClassName }}
      priorityClassName: {{ .Values.yuuvis.services.commander.priorityClassName }}
      {{- end }}
      {{- with .Values.yuuvis.services.commander.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      imagePullSecrets:
      - name: {{ .Values.yuuvis.image.imagePullSecret }}