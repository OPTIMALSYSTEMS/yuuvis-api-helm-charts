apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{.Values.yuuvis.labels.app}}
    name: admin
  name: admin
spec:
  replicas: {{.Values.yuuvis.services.admin.instances}}
  selector:
    matchLabels:
      name: admin
  template:
    metadata:
      labels:
        name: admin
    spec:
      initContainers:
      - name: init-admin
        image: busybox
        command: ["sh", "-c", "{{.Values.initContainer.command}}"]
        imagePullPolicy: IfNotPresent
      containers:
      - name: admin
        image: "{{.Values.yuuvis.services.admin.dockerRegistry}}:{{ .Values.yuuvis.services.admin.tag }}"
        imagePullPolicy: {{ .Values.yuuvis.image.imagePullPolicy }}
        {{- if .Values.yuuvis.livenessProbe.enable }}
        livenessProbe:
          httpGet:
            path: {{.Values.yuuvis.livenessProbe.path}}
            port: {{.Values.yuuvis.services.admin.port}}
          initialDelaySeconds: {{.Values.yuuvis.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{.Values.yuuvis.livenessProbe.periodSeconds }}
          timeoutSeconds: {{.Values.yuuvis.livenessProbe.timeoutSeconds }}
        {{- end}}
        {{- if .Values.yuuvis.readinessProbe.enable }}
        readinessProbe:
          httpGet:
            path: {{.Values.yuuvis.readinessProbe.path}}
            port: {{.Values.yuuvis.services.admin.port}}
          initialDelaySeconds: {{.Values.yuuvis.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{.Values.yuuvis.readinessProbe.periodSeconds }}
          timeoutSeconds: {{.Values.yuuvis.readinessProbe.timeoutSeconds }}
        {{- end}}
        resources:
          requests:
            memory: {{.Values.yuuvis.services.admin.requests.memory}}
        env:
        - name: JAVA_OPTS
          value: {{.Values.yuuvis.services.admin.java.maxHeap}}
        - name: SERVER_PORT
          value: "{{.Values.yuuvis.services.admin.port}}"
        - name: SPRING_PROFILES_ACTIVE
          value: {{.Values.yuuvis.services.admin.profiles}}
        - name: SPRING_CLOUD_CONFIG_URI
          valueFrom:
            configMapKeyRef:
              name: yuuvis-common-env
              key: CONFIGSERVICEURL
        ports:
        - containerPort: {{.Values.yuuvis.services.admin.port}}
      restartPolicy: Always
      serviceAccount: adminserviceaccount
      imagePullSecrets:
      - name: yuuvisorg