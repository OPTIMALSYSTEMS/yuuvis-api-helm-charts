apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{.Values.yuuvis.labels.app}}
    name: textextractor
  name: textextractor
spec:
  replicas: {{.Values.yuuvis.services.textextractor.instances}}
  selector:
    matchLabels:
      name: textextractor
  template:
    metadata:
      labels:
        name: textextractor
    spec:
      initContainers:
      {{- if .Values.yuuvis.services.textextractor.dependencyCheck.enable }}
      - name: dependency-check
        image: radial/busyboxplus:curl
        imagePullPolicy: IfNotPresent
        command: 
          - "sh" 
          - "-c" 
          - 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' {{.Values.yuuvis.services.textextractor.dependencyCheck.url}})" != "200" ]]; do sleep 11; done'      
      {{- end}}
      - name: init-textextractor
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "{{.Values.initContainer.command}}"]
      containers:
      - name: textextractor
        image: "{{.Values.yuuvis.services.textextractor.dockerRegistry}}:{{ .Values.yuuvis.services.textextractor.tag }}"
        imagePullPolicy: {{ .Values.yuuvis.image.imagePullPolicy }}
        {{- if .Values.yuuvis.livenessProbe.enable }}
        livenessProbe:
          httpGet:
            path: {{.Values.yuuvis.livenessProbe.path}}
            port: {{.Values.yuuvis.services.textextractor.port}}
          initialDelaySeconds: {{.Values.yuuvis.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{.Values.yuuvis.livenessProbe.periodSeconds }}
          timeoutSeconds: {{.Values.yuuvis.livenessProbe.timeoutSeconds }}
        {{- end}}
        {{- if .Values.yuuvis.readinessProbe.enable }}
        readinessProbe:
          httpGet:
            path: {{.Values.yuuvis.readinessProbe.path}}
            port: {{.Values.yuuvis.services.textextractor.port}}
          initialDelaySeconds: {{.Values.yuuvis.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{.Values.yuuvis.readinessProbe.periodSeconds }}
          timeoutSeconds: {{.Values.yuuvis.readinessProbe.timeoutSeconds }}
       {{- end}}
        resources:
          requests:
            memory: {{.Values.yuuvis.services.textextractor.requests.memory}}
        env:
        - name: JAVA_OPTS
          value: {{.Values.yuuvis.services.textextractor.java.maxHeap}}
        - name: SPRING_PROFILES_ACTIVE
          value: {{.Values.yuuvis.services.textextractor.profiles}}
        - name: SPRING_CLOUD_CONFIG_URI
          valueFrom:
            configMapKeyRef:
              name: yuuvis-common-env
              key: CONFIGSERVICEURL
        ports:
        - containerPort: {{.Values.yuuvis.services.textextractor.port}}
      restartPolicy: Always
      automountServiceAccountToken: false
      imagePullSecrets:
      - name: yuuvisorg