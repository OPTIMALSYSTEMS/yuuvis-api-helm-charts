yuuvis:
  image:
    imagePullPolicy: Always
    imagePullSecret: yuuvisorg
    dockerRegistry: docker.yuuvis.org/yuuvis
  labels:
    app: yuuvis
  configservice:
    url: http://configservice/config
  git:
    protocol: http
    # please not that since infrastructure helm chart 0.9.0 gitea is used 
    # in previous versions gogs was used
    # url: gogs.infrastructure/yuuvis/yuuvis-config.git
    url: gitea-http.infrastructure:3000/yuuvis/yuuvis-config.git
    name: yuuvis-config
    user: yuuvis
    password: changeme
    branch: master
    initjob:
      docker:
        image: helper/init-helper:2023-12-03
      nodeSelector: {}
      priorityClassName: ""
      tolerations: []
      nodeAffinity: {}
      podAffinity: {}
      podAntiAffinity: {}
  amqp:
    user: rodger
    password: changeme
    url: rabbitmq.infrastructure
    port: 5672
  livenessProbe:
    enable: false
    initialDelaySeconds: 300
    periodSeconds: 30
    timeoutSeconds: 10
  readinessProbe:
    enable: true
    initialDelaySeconds: 0
    periodSeconds: 30
    timeoutSeconds: 5
  client:
    apiweb:
      dockerImage: api-web:1.17.15
      profiles: prod,kubernetes
      instances: 1
      pdb:
        # pdb requires instances > 1 and minAvailable < instances,
        # otherwise draining nodes will deadlock!
        enabled: false

        # set `minAvailable: null` if you want to use maxUnavailable instead
        minAvailable: 1
      nodeSelector: {}
      priorityClassName: ""
      tolerations: []
      nodeAffinity: {}
      podAffinity: {}
      podAntiAffinity: {}
      java:
        maxHeap: -Xmx512m
    userservice:
      dockerImage: userservice:1.13.2
      initContainerImage: helper/init-helper:2023-12-03
      profiles: dbspostgres
      instances: 1
      pdb:
        # pdb requires instances > 1 and minAvailable < instances,
        # otherwise draining nodes will deadlock!
        enabled: false

        # set `minAvailable: null` if you want to use maxUnavailable instead
        minAvailable: 1
      nodeSelector: {}
      priorityClassName: ""
      tolerations: []
      nodeAffinity: {}
      podAffinity: {}
      podAntiAffinity: {}
      java:
        maxHeap: -Xmx128m
      database:
        name: erebus
        user: erebus
        password: changeme
        port: "5432"
        address: postgresql.infrastructure
        createdb: true
        # for postgres systems the database an optional init job can be used to create 
        # the database
        # if createdb is 'true' 
        # the following user is used to test if the database and user exists
        # and if they dont exit, to create the database, the user and
        # grand the user privileges for the database
        # the privilege user must have the rights to create databases, users
        # and grand privileges to users
        privilege:
          user: postgres
          password: changeme
    client:
      dockerImage: client:5.3.9
      instances: 1
      pdb:
        # pdb requires instances > 1 and minAvailable < instances,
        # otherwise draining nodes will deadlock!
        enabled: false

        # set `minAvailable: null` if you want to use maxUnavailable instead
        minAvailable: 1
      nodeSelector: {}
      priorityClassName: ""
      tolerations: []
      nodeAffinity: {}
      podAffinity: {}
      podAntiAffinity: {}
    custom:
      dockerImage: client:5.3.9
      instances: 0
      nodeSelector: {}
      priorityClassName: ""
      tolerations: []
      nodeAffinity: {}
      podAffinity: {}
      podAntiAffinity: {}
    viewer:
      dockerImage: viewerservice:3.0.10
      instances: 1
      pdb:
        # pdb requires instances > 1 and minAvailable < instances,
        # otherwise draining nodes will deadlock!
        enabled: false

        # set `minAvailable: null` if you want to use maxUnavailable instead
        minAvailable: 1
      nodeSelector: {}
      priorityClassName: ""
      tolerations: []
      nodeAffinity: {}
      podAffinity: {}
      podAntiAffinity: {}
    architect:
      dockerImage: architect:2.2.1
      instances: 1
      nodeSelector: {}
      priorityClassName: ""
      tolerations: []
      nodeAffinity: {}
      podAffinity: {}
      podAntiAffinity: {}
    sothook:
      dockerImage: sandbox/sothook:4.17.0
      instances: 1
      pdb:
        # pdb requires instances > 1 and minAvailable < instances,
        # otherwise draining nodes will deadlock!
        enabled: false

        # set `minAvailable: null` if you want to use maxUnavailable instead
        minAvailable: 1
      nodeSelector: {}
      priorityClassName: ""
      tolerations: []
      nodeAffinity: {}
      podAffinity: {}
      podAntiAffinity: {}
      profiles: prod,cloud,redis,kubernetes
      java:
        maxHeap: -Xmx512m -XX:+ExitOnOutOfMemoryError
    tenantmanagement:
      dockerImage: tenant-management:1.14.5
      profiles: prod,kubernetes,oauth2
      instances: 1
      pdb:
        # pdb requires instances > 1 and minAvailable < instances,
        # otherwise draining nodes will deadlock!
        enabled: false

        # set `minAvailable: null` if you want to use maxUnavailable instead
        minAvailable: 1
      nodeSelector: {}
      priorityClassName: ""
      tolerations: []
      nodeAffinity: {}
      podAffinity: {}
      podAntiAffinity: {}
      java:
        maxHeap: -Xmx128m
      client:
        rooturl: https://changeme
      # if e.g. the keycloak has been deployed with a self signed cert 
      # the certs mounted at /etc/yuuvis/certs will be added to the used java truststore 
      # at the start of the container
      volumes: |
        - name: keycloak-tls-selfsigned
          secret:
            defaultMode: 420
            secretName: keycloak-selfsigned-cert-secret
      volumeMounts: |
        - mountPath: /etc/yuuvis/certs
          name: keycloak-tls-selfsigned
    office365:
      dockerImage: office-for-the-web/yuuvis-momentum-provider-client:2.0.3
      instances: 1
      pdb:
        # pdb requires instances > 1 and minAvailable < instances,
        # otherwise draining nodes will deadlock!
        enabled: false

        # set `minAvailable: null` if you want to use maxUnavailable instead
        minAvailable: 1
      nodeSelector: {}
      priorityClassName: ""
      tolerations: []
      nodeAffinity: {}
      podAffinity: {}
      podAntiAffinity: {}
      profiles: prod,docker,kubernetes
      user: changeme
      password: changeme
      providerUrl: https://provider-staging.prod.enaio.io/
      hostUrl: https://host-staging.prod.enaio.io/
      dmsUrl: http://authentication/api/dms/ 
      historyUrl: http://audit/api/dms/objects/custom
      userInfoUrl: http://tenant-management/api/idm/me 
      workDir: /tmp
      enableRecovery: "false"
      java:
        maxHeap: -Xmx128m    
    dashlet:
      dockerImage: office-for-the-web/yuuvis-momentum-dashlet-microservice:2.0.1
      instances: 1
      pdb:
        # pdb requires instances > 1 and minAvailable < instances,
        # otherwise draining nodes will deadlock!
        enabled: false

        # set `minAvailable: null` if you want to use maxUnavailable instead
        minAvailable: 1
      nodeSelector: {}
      priorityClassName: ""
      tolerations: []
      nodeAffinity: {}
      podAffinity: {}
      podAntiAffinity: {}
      profiles: prod,docker,kubernetes
      java:
        maxHeap: -Xmx128m    
      configservice:
        url: http://configservice/config  
      
initContainer:
  command: "until wget -q --spider http://configservice/api/resources/schema.xml/path/system; do echo waiting for configservice; sleep 11; done;"
  image: busybox
  tag: 1.36
  dockerRegistry: docker.io
  imagePullPolicy: IfNotPresent

configfiles:
  appclientschema: |
    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <schema xmlns="http://optimal-systems.org/ns/dmscloud/schema/v5.0/">
      <propertyStringDefinition>
        <id>clienttitle</id>
        <propertyType>string</propertyType>
        <cardinality>single</cardinality>
        <required>true</required>
        <maxLength>200</maxLength>
      </propertyStringDefinition>
      <propertyStringDefinition>
        <id>clientdescription</id>
        <propertyType>string</propertyType>
        <cardinality>single</cardinality>
        <required>true</required>
        <maxLength>200</maxLength>
      </propertyStringDefinition>
      <typeDocumentDefinition>
        <id>minidoc</id>
        <baseId>system:document</baseId>
        <contentStreamAllowed>allowed</contentStreamAllowed>
        <secondaryObjectTypeId>appClientsystem:leadingType</secondaryObjectTypeId>
        <secondaryObjectTypeId>appClient:clientdefaults</secondaryObjectTypeId>
      </typeDocumentDefinition>
      <typeSecondaryDefinition>
        <id>clientdefaults</id>
        <description>contains title and description fields mainly for mixed resultlist and object header</description>
        <baseId>system:secondary</baseId>
        <propertyReference>clienttitle</propertyReference>
        <propertyReference>clientdescription</propertyReference>
        <classification>appClient:required</classification>
      </typeSecondaryDefinition>
    </schema>
  appclientsystemschema: |
    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <schema xmlns="http://optimal-systems.org/ns/dmscloud/schema/v5.0/">
      <propertyStringDefinition>
        <id>leadingTypeId</id>
        <propertyType>string</propertyType>
        <cardinality>single</cardinality>
        <required>true</required>
        <classification>appClient:standardform:hidden</classification>
      </propertyStringDefinition>
      <typeSecondaryDefinition>
        <id>leadingType</id>
        <description>contains the field that supports a better use of FSOTs</description>
        <baseId>system:secondary</baseId>
        <propertyReference>leadingTypeId</propertyReference>
      </typeSecondaryDefinition>
    </schema>
  appclientsystemsystemHookConfiguration: |
    {"systemhooks" :
      {"amqp" : [],
      "webhooks": [
         {
           "enable" : true,
           "predicate" : "spel:T(java.util.List).of(100,101).contains(options['action']) && properties['system:secondaryObjectTypeIds'] != null && properties['system:secondaryObjectTypeIds']['value'].contains('appClientsystem:leadingType')",
           "type" : "dms.request.objects.upsert.database-before",
           "url" : "http://sothook/api/dms/request/import/databasebefore",
           "useDiscovery" : true
         },
         {
           "enable" : true,
           "predicate" : "spel:T(java.util.List).of(300).contains(options['action']) && properties['system:secondaryObjectTypeIds'] != null && properties['system:secondaryObjectTypeIds']['value'].contains('appClientsystem:leadingType')",
           "type" : "dms.request.objects.upsert.database-before",
           "url" : "http://sothook/api/dms/request/updatemetadata/databasebefore",
           "useDiscovery" : true
         }
       ]
     }
    }
  i18nde: |
    {
      "system:folder_label": "Alle Ordner",
      "system:folder_description": "01 Übergreifend",
      "system:document_label": "Alle Dokumente",
      "system:document_description": "01 Übergreifend",
      "system:secondary_label": "Alle sekundären Dokumente",
      "system:secondary_description": "01 Übergreifend",
      "system:baseTypeId_label": "Basistyp",
      "system:objectTypeId_label": "Typ",
      "system:secondaryObjectTypeIds_label": "Characteristika",
      "system:parentObjectTypeId_label": "Ordnertyp",
      "system:objectId_label": "Objekt-ID",
      "system:parentId_label": "Ordner-ID",
      "system:createdBy_label": "Ersteller",
      "system:creationDate_label": "Erstellt am",
      "system:lastModifiedBy_label": "Bearbeiter",
      "system:lastModificationDate_label": "Bearbeitet am",
      "system:versionNumber_label": "Version",
      "system:acl_label": "Zugriffsliste",
      "system:tenant_label": "Mandant",
      "system:traceId_label": "Trace-ID",
      "system:tags_label": "Tags",
      "system:contentStreamLength_label": "Dateigröße",
      "system:contentStreamMimeType_label": "Dateityp",
      "system:contentStreamFileName_label": "Dateiname",
      "system:contentStreamId_label": "Dateistrom-ID",
      "system:contentStreamRange_label": "Dateistrombereich",
      "system:contentStreamRepositoryId_label": "Dateistrom-Repository",
      "system:digest_label": "Digest",
      "system:archivePath_label": "Archivpfad",
      "system:rmExpirationDate_label": "Aufbewahrungsdatum",
      "system:rmStartOfRetention_label": "Aufbewahrungsstart",
      "system:rmDestructionDate_label": "Aussonderungsdatum",
      "system:rmDestructionRetention_label": "Aufbewahrung",
      "system:parentVersionNumber_label": "Ordner-Version",
      "follow-up_label": "Wiedervorlage",
      "expiryDateTime_label": "Wiedervorlagedatum",
      "businessKey_label": "Objekt",
      "whatAbout_label": "Betreff",
      "startTime_label": "Startzeitpunkt",
      "task_label": "Erinnerung Wiedervorlage",
      "type_label": "Type",
      "undefined_label": "",
      "document_label": "Dokument",
      "document_description": "01 Übergreifend",
      "appClient_label": "Client-Standards",
      "appClient:minidoc_label": "Kleinstes Dokument",
      "appClient:minidoc_description": "01 Übergreifend",
      "appClient:clientdefaults_label": "Objektkopf",
      "appClient:clienttitle_label": "Titel",
      "appClient:clientdescription_label": "Beschreibung",
      "appClientsystem:leadingType_label": "Typ",
      "appClientsystem:leadingTypeId_label": "Typ"
    }
  i18nen: |
    {
     "system:folder_label": "All folders",
     "system:folder_description": "01 Across all",
     "system:document_label": "All documents",
     "system:document_description": "01 Across all",
     "system:secondary_label": "All secondary documents",
     "system:secondary_description": "01 Across all",
     "system:baseTypeId_label": "Basistype ID",
     "system:objectTypeId_label": "Object-type ID",
     "system:secondaryObjectTypeIds_label": "Characteristics",
     "system:parentObjectTypeId_label": "Folder type",
     "system:objectId_label": "Object ID",
     "system:parentId_label": "Folder ID",
     "system:createdBy_label": "Creator",
     "system:creationDate_label": "Created on",
     "system:lastModifiedBy_label": "Editor",
     "system:lastModificationDate_label": "Edited on",
     "system:versionNumber_label": "Version",
     "system:acl_label": "Access list",
     "system:tenant_label": "Tenant",
     "system:traceId_label": "Trace ID",
     "system:tags_label": "Tags",
     "system:contentStreamLength_label": "File size",
     "system:contentStreamMimeType_label": "File type",
     "system:contentStreamFileName_label": "File name",
     "system:contentStreamId_label": "Content ID",
     "system:contentStreamRange_label": "Content range",
     "system:contentStreamRepositoryId_label": "Content stream repository",
     "system:digest_label": "Digest",
     "system:archivePath_label": "Archive path",
     "system:rmExpirationDate_label": "Retention date",
     "system:rmStartOfRetention_label": "Retention start",
     "system:rmDestructionDate_label": "Destruction date",
     "system:rmDestructionRetention_label": "Retention",
     "system:parentVersionNumber_label": "Folder version",
     "follow-up_label": "Follow-up",
     "expiryDateTime_label": "Follup-up date",
     "businessKey_label": "Object",
     "whatAbout_label": "Subject",
     "startTime_label": "Start time",
     "task_label": "Follow-up reminder",
     "type_label": "Type",
     "undefined_label": "",
     "document_label": "Document",
     "document_description": "01 Across all",
     "appClient_label": "Client standards",
     "appClient:minidoc_label": "Smallest document",
     "appClient:minidoc_description": "01 Across all",
     "appClient:clientdefaults_label": "Object header",
     "appClient:clienttitle_label": "Title",
     "appClient:clientdescription_label": "Description",
     "appClientsystem:leadingType_label": "Type",
     "appClientsystem:leadingTypeId_label": "Type"
    }
