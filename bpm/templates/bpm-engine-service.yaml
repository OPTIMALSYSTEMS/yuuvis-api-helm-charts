apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: yuuvis
    name: bpm-engine
  name: bpm-engine
spec:
  replicas: {{.Values.yuuvis.bpm.engine.instances}}
  selector:
    matchLabels:
      name: bpm-engine
  template:
    metadata:
      labels:
        name: bpm-engine
    spec:
      {{- if or .Values.yuuvis.bpm.engine.nodeAffinity .Values.yuuvis.bpm.engine.podAffinity .Values.yuuvis.bpm.engine.podAntiAffinity }}
      affinity:
        {{- with .Values.yuuvis.bpm.engine.nodeAffinity }}
        nodeAffinity: {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.yuuvis.bpm.engine.podAffinity }}
        podAffinity: {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.yuuvis.bpm.engine.podAntiAffinity }}
        podAntiAffinity: {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}
      containers:
      - env:
        - name: JAVA_OPTS
          value: {{.Values.yuuvis.bpm.engine.java.maxHeap}}
        - name: SPRING_CLOUD_CONFIG_URI
          value: {{ .Values.yuuvis.configservice.url }}
        - name: SPRING_PROFILES_ACTIVE
          value: {{.Values.yuuvis.bpm.engine.profiles}}
        - name: SPRING_DATASOURCE_HIKARI_MINIMUM-IDLE
          value: "{{.Values.yuuvis.bpm.engine.spring.datasource.hikari.minimumIdle}}"
        - name: SPRING_DATASOURCE_HIKARI_MAXIMUM-POOL-SIZE
          value: "{{.Values.yuuvis.bpm.engine.spring.datasource.hikari.maximumPoolSize}}"
        - name: db.user
          valueFrom:
            secretKeyRef:
              key: user
              name: bpm-dbsecret
        - name: db.pwd
          valueFrom:
            secretKeyRef:
              key: password
              name: bpm-dbsecret
        - name: db.host
          value: {{.Values.yuuvis.bpm.engine.database.address}}
        - name: db.port
          value: {{.Values.yuuvis.bpm.engine.database.port | quote }}
        - name: db.name
          value: {{.Values.yuuvis.bpm.engine.database.name}}
        image: {{.Values.yuuvis.image.dockerRegistry}}/{{.Values.yuuvis.bpm.engine.dockerImage}}
        imagePullPolicy: {{ .Values.yuuvis.image.imagePullPolicy }}
        name: bpm
        ports:
        - containerPort: 8080
          protocol: TCP
      imagePullSecrets:
      - name: {{.Values.yuuvis.image.imagePullSecret}}
      initContainers:
      {{- if .Values.yuuvis.bpm.engine.database.createdb }}
      - command:
        - sh
        - /yuuvis/script/initdb.sh
        env:
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              key: user
              name: initbpm-dbsecret
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: initbpm-dbsecret
        - name: DBUSER
          valueFrom:
            secretKeyRef:
              key: user
              name: bpm-dbsecret
        - name: DBPWD
          valueFrom:
            secretKeyRef:
              key: password
              name: bpm-dbsecret
        - name: DBNAME
          value: {{.Values.yuuvis.bpm.engine.database.name}}
        image: {{.Values.yuuvis.image.dockerRegistry}}/{{.Values.yuuvis.bpm.engine.initContainerImage}}
        imagePullPolicy: Always
        name: init-database
        volumeMounts:
        - mountPath: /yuuvis/script/initdb.sh
          name: initscript
          subPath: initdb.sh
      {{- with .Values.yuuvis.bpm.engine.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.yuuvis.bpm.engine.priorityClassName }}
      priorityClassName: {{ .Values.yuuvis.bpm.engine.priorityClassName }}
      {{- end }}
      {{- with .Values.yuuvis.bpm.engine.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - configMap:
          name: initbpmdbconfigmap
        name: initscript
      {{- end}}