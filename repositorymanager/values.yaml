imageCredentials:
  yuuvisorg:
    registry: docker.yuuvis.org
    username:
    password:
yuuvis:
  image:
    imagePullPolicy: Always
    imagePullSecret: yuuvisorg
    dockerRegistry: docker.yuuvis.org/yuuvis
  configservice:
    url: http://system.yuuvis/config
  repositorymanager:
    initContainerImage: helper/init-helper:2023-12-03
    instances: 1
    pvc:
      storageClassName: default
      storageSize: 1Gi
    pdb:
      # pdb requires instances > 1 and  minAvailable < instances,
      # otherwise draining nodes will deadlock!
      enabled: false

      # set `minAvailable: null` if you want to use maxUnavailable instead
      minAvailable: 1
    profile: prod # With every instance of rm this should be changed
    dockerImage: repositorymanager
    tag: 4.3.3
    core:
      workingdir: /working-dir
      api:
        password: optimal      # Change value
        tenant: instance1tenant # Change value
        username: root  # Change value
        client: http://client.yuuvis
      nodeSelector: {}
      priorityClassName: ""
      tolerations: []
      nodeAffinity: {}
      podAffinity: {}
      podAntiAffinity: {}
      java:
        maxHeap: -Xmx256m -XX:+ExitOnOutOfMemoryError
    mq:
      dockerImage: repositorymanager-mq
      tag: 1.2.1
      instances: 1
      pdb:
        # pdb requires instances > 1 and minAvailable < instances,
        # otherwise draining nodes will deadlock!
        enabled: false
        
        # set `minAvailable: null` if you want to use maxUnavailable instead
        minAvailable: 1
      nodeSelector: {}
      priorityClassName: ""
      tolerations: []
      nodeAffinity: {}
      podAffinity: {}
      podAntiAffinity: {}
      java:
        maxHeap: -Xmx256m -XX:+ExitOnOutOfMemoryError
       
initContainer:
  command: "until wget -q --spider http://system.yuuvis/manage/health; do echo waiting for configservice; sleep 11; done;"
